<?xml version="1.0" encoding="utf-8"?>
<!-- 
	==============================================================================
	build file
	
	Authors:
	Chu daping <chudaping@hotmail.com>
	
	Legal:
	Copyright (c) 2002-2003 INC. All Rights Reserved.
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	==============================================================================
-->
<project name="newgame" default="main" basedir=".">

	<!-- set global properties for this build -->
	<property name="src" value="src" />
	<property name="build" value="build" />
	<property name="web" value="web" />
	<property name="bin" value="bin" />
	<property name="conf" value="conf" />
	<property name="lib" value="lib" />
	<property name="name" value="webgame" />
	<property name="com" value="newgame" />












	<property name="version" value="1.0.0" />
	<tstamp>
		<format property="date" pattern="yyyy-MM-dd HH:mm" />
	</tstamp>

	<path id="project.class.path">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="init" depends="clean">
		<!-- create the time stamp -->
		<tstamp />
		<mkdir dir="${build}" />
		<!--<mkdir dir="${web}" />
		<mkdir dir="${bin}" />
		<mkdir dir="${conf}" />-->
		<!-- cvs command="update -P -d" dest="${src}" />
		<cvs command="update -P -d" dest="${conf}" />
		<cvs command="update -P -d" dest="${lib}" />
		<cvs command="update -P -d" dest="${web}" /-->
		<!-- check all jar files to determine whether or not some jar files are updated -->
		<uptodate property="need.clean"
			targetfile="${lib}/${com}-${name}-${version}.jar">
			<srcfiles dir="${lib}">
				<include name="**/*.jar" />
				<exclude name="${com}-${name}-${version}.jar" />
			</srcfiles>
		</uptodate>
	</target>

	<target name="check" depends="init" unless="need.clean">
		<echo>
			call cleanup target cause some libs are updated after last
			compiling time.
		</echo>
		<echo>
			so ant will compile all source files,it will cost more time.
		</echo>
		<antcall target="clean" />
	</target>

	<target name="compile" depends="check">
		<mkdir dir="${build}" />
		<!-- compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" encoding="utf-8"
			debug="on">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="${build}">
			<fileset dir="${src}">
				<include name="**/*.xml" />
				<include name="**/*.dtd" />
				<include name="**/*.properties" />
				<include name="**/*.vm" />
				<include name="**/*.xsd" />
			</fileset>
		</copy>
	</target>

	<target name="hash" depends="init">
		<!-- compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" encoding="utf-8"
			optimize="on">
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="main" depends="compile">
		<!--<mkdir dir="${lib}" />-->
		<mkdir dir="${lib}"/>
		<!-- put everything in ${build} into the airinbox-mud.jar file-->
		<jar jarfile="${lib}/${com}-${name}-${version}.jar"
			basedir="${build}" />
		<!--<copy file="${lib}/${com}-${name}-${version}.jar"
					tofile="H:/apache-tomcat-7.0.82-windows-x64/apache-tomcat-7.0.82/webapps/newgame/WEB-INF/lib/${com}-${name}-${version}.jar"
					overwrite="true" />-->
		<!--<jar jarfile="D:/newresin/resin-4.0.41/webapps/webgame/WEB-INF/${lib}/${com}-${name}-${version}.jar"
					basedir="${build}" />-->
	</target>


	<target name="clean">
		<!-- delete the ${build} -->
		<delete dir="${build}" />
		<delete file="${lib}/${com}-${name}-${version}.jar" />
	</target>

	<target name="cleanall">
		<antcall target="clean" />
		<delete dir="docs/api" />
	</target>

	<target name="help">
		<echo>
			All Target List Hereï¼š

			mock deploy local mock service

			Pls comfirm the server u want to deploy, it mush be correct.

		</echo>
	</target>

</project>
